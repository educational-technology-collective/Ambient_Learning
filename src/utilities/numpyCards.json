[
  {
    "type": "mcq",
    "content": {
      "question": "What is the dimension of `array = np.array([[[1,1],1],1])`",
      "answer": [
        { "option": "1", "isCorrect": false },
        { "option": "2", "isCorrect": false },
        { "option": "3", "isCorrect": true },
        { "option": "4", "isCorrect": false }
      ]
    }
  },
  {
    "type": "mcq",
    "content": {
      "question": "What is the method to get the length of each dimension of numpy?",
      "answer": [
        { "option": "numpy.ndim", "isCorrect": false },
        { "option": "numpy.shape", "isCorrect": true },
        { "option": "numpy.dtype", "isCorrect": false },
        { "option": "numpy.arrange", "isCorrect": false }
      ]
    }
  },
  {
    "type": "mcq",
    "content": {
      "question": "Which of the following is not suitable for generating an example array of shape (4,5)?",
      "answer": [
        { "option": "np.zeros((4, 5))", "isCorrect": false },
        { "option": "np.ones((4, 5))", "isCorrect": false },
        { "option": "np.random.rand(4,5)", "isCorrect": false },
        { "option": "np.array((4,5))", "isCorrect": true }
      ]
    }
  },
  {
    "type": "qa",
    "content": {
      "question": "What is the third argument of the `np.linspace()` function?",
      "answer": "The total number of items you want to generate"
    }
  },
  {
    "type": "mcq",
    "content": {
      "question": "If I want to generate a 1D numpy array of odd numbers starting from 5 and end at 45(inclusively), which of the following works?",
      "answer": [
        { "option": "np.arange(5, 45, 2)", "isCorrect": false },
        { "option": "np.arange(5, 44, 2)", "isCorrect": false },
        { "option": "np.arange(5, 46, 2)", "isCorrect": true },
        { "option": "np.arange(5, 48, 2)", "isCorrect": false }
      ]
    }
  },
  {
    "type": "mcq",
    "content": {
      "question": "What is the output of the following program?\n```\na = np.array([1,2,3])\nb=np.array([3,4])\nprint(a-b)",
      "answer": [
        { "option": "[-2, -2, -2]", "isCorrect": false },
        { "option": "[-2, -2, 0]", "isCorrect": false },
        { "option": "[-2, -2, 3]", "isCorrect": false },
        { "option": "[-2, -2]", "isCorrect": false },
        { "option": "[-2, -2, null]", "isCorrect": false },
        { "option": "Error", "isCorrect": true }
      ]
    }
  },
  {
    "type": "qa",
    "content": {
      "question": "What is the output of the following program?\n```\na = np.array([1, 2, 3, 5, 6])\na % 2 == 1",
      "answer": "array([True, False, True, True, False])"
    }
  },
  {
    "type": "qa",
    "content": {
      "question": "Which sign do you use to do a matrix dot product in numpy?",
      "answer": "@"
    }
  },
  {
    "type": "mcq",
    "content": {
      "question": "The type of the resulting array of manipulating arrays of different types will go through",
      "answer": [
        { "option": "Upcast", "isCorrect": true },
        { "option": "Downcast", "isCorrect": false }
      ]
    }
  },
  {
    "type": "mcq",
    "content": {
      "question": "For `b=np.array([[[1,2,3], [4, 5, 6], [7, 8, 9]]])`, `b[0][1][1]` and `b[0,1,1]` both give you 5",
      "answer": [
        { "option": "True", "isCorrect": true },
        { "option": "False", "isCorrect": false }
      ]
    }
  },
  {
    "type": "mcq",
    "content": {
      "question": "Which of the following is the zipping way for `np.array(a[3, 5], [3, 8], [4, 9])`",
      "answer": [
        { "option": "a[[3, 3, 8], [4, 5, 9]]", "isCorrect": false },
        { "option": "a[[3, 3, 4], [5, 8, 9]]", "isCorrect": true },
        { "option": "a[[3, 5, 3], [8, 4, 9]]", "isCorrect": false },
        { "option": "a[[3, 8, 4], [3, 5, 9]]", "isCorrect": false }
      ]
    }
  },
  {
    "type": "qa",
    "content": {
      "question": "What is the output of the following program?\n```\na = np.array([[4, -3, -2], [1, 2, -5]])\nprint(a[a * -1 > 0])",
      "answer": "[-3, -2, -5]"
    }
  },
  {
    "type": "qa",
    "content": {
      "question": "In multidimensional arrays slicing, the first argument is for selecting _____, and the second argument is for selecting ______?",
      "answer": "rows; columns"
    }
  },
  {
    "type": "mcq",
    "content": {
      "question": "What is the output of the following program?\n```\na = np.array([[2, 5], [3,8], [6, 10]])\nsub = a[0:2, 0:1]\nsub[1,0] = 12\nprint(a[1][0])",
      "answer": [
        { "option": "8", "isCorrect": false },
        { "option": "2", "isCorrect": false },
        { "option": "12", "isCorrect": true },
        { "option": "3", "isCorrect": false }
      ]
    }
  },
  {
    "type": "qa",
    "content": {
      "question": "If we want non-consecutive rows for multidimensional array slicing. What should you do",
      "answer": "Pass the array of indices of the rows you want as the first argument"
    }
  }
]
